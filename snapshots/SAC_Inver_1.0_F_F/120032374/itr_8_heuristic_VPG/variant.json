{
  "algo_name": "VPG",
  "discount": 0.999,
  "n_epochs": 20,
  "episode_batch": {
    "last_observations": "array([[-1.00051398, -0.63271472,  0.47153285, ..., 10.        ,\n         0.        ,  0.        ],\n       [-0.9296256 , -0.45472255, -0.10372015, ...,  0.        ,\n         0.        ,  0.        ],\n       [-1.00318584, -0.55035602,  0.73861657, ..., 10.        ,\n         0.        ,  0.        ],\n       ...,\n       [-0.99087009, -0.48552552, -0.03589548, ..., 10.        ,\n         0.        ,  0.        ],\n       [-0.99023097, -0.10829511, -0.60496941, ..., 10.        ,\n         0.        ,  0.        ],\n       [-0.9637882 , -0.05918356, -0.6402611 , ...,  0.        ,\n         0.        ,  0.        ]])",
    "lengths": "array([155,  87, 203,  55,  94,  73, 122, 477,  72, 234,  96,  99, 117,\n        68,  88,  80, 187, 159,  63,  67, 101,  78, 185, 112,  82,  71,\n        96, 259,  59,  86,  78, 236,  86,  82,  54,  62, 136,  61, 105,\n        97, 107,  75, 106, 345, 132,  57,  70, 107,  52,  71, 131,  55,\n       368,  48,  66, 331,  97,  68,  75, 177,  95,  48,  83,  71, 103,\n       148, 114,  83,  84, 325,  93,  67, 235,  81, 119,  62,  87,  65,\n       171,  66,  59,  49,  71, 118, 524,  46,  91, 175, 145, 108, 206,\n       189,  89, 125, 117, 102, 132,  92, 107,  71, 194, 124, 297,  99,\n       121, 166,  80,  89, 320,  71,  85, 115,  55,  70,  76, 126, 126,\n        58,  42,  60,  95, 162,  88,  79,  76, 117,  70,  99,  85,  82,\n       302,  69, 141, 145,  80, 155, 100, 650,  73,  73,  91,  67, 137,\n       249,  68,  52,  59,  77, 312,  62, 102, 294, 267,  79,  44,  60,\n       123,  59,  95, 100,  99,  91,  81,  63, 159, 131,  90, 144, 298,\n        51,  57, 242, 242, 112,  66, 123, 232, 161, 150,  85, 174,  60,\n       207, 161,  75, 152, 114,  62,  61,  83,  56,  89, 111, 102,  73,\n       100,  60,  90,  71,  81,  65,  64,  82, 153, 271,  55,  76,  72,\n       379,  44, 251, 302,  55, 180,  95, 136, 170, 113, 190, 321,  89,\n       204,  73,  61,  70,  81, 117,  64,  68, 178, 116, 249, 110,  60,\n       189,  74, 100,  60, 271,  66,  56, 105, 106,  50,  92,  65,  52,\n       161, 161,  86, 393, 155, 235, 162, 117,  61,  65,  55, 155,  76,\n        94, 118, 191, 148,  56,  87,  65,  73, 194,  98, 358,  87, 124,\n        90, 292,  55,  74,  87,  52,  73,  70,  84, 125, 202,  94, 362,\n       140,  59,  97, 106, 134, 224,  60, 201, 193,  82,  67,  76, 135,\n       100,  91,  96,  92, 145,  73,  67,  78,  65,  62,  69, 133,  83,\n       123, 234,  52,  52, 215, 258, 125,  85,  64, 515,  54, 165,  68,\n       129,  79,  80,  72, 318, 207, 199,  77, 147,  86, 181, 103,  98,\n       196, 160,  58,  61, 174, 112,  71, 133,  97,  22,  96, 155, 293,\n        59, 115, 319, 601,  60, 467,  47,  85, 218,  91,  75, 104,  85,\n        62,  97,  70, 222, 117,  62, 270,  98, 103,  96,  72,  79,  66,\n       156,  89,  61,  68, 159, 187, 105,  56,  47, 268, 113,  66,  57,\n       101,  72,  84, 267, 134,  65, 158,  72,  84,  72, 268], dtype=int32)",
    "env_spec": {
      "max_episode_length": 1000,
      "input_space": {
        "dtype": "dtype('float32')",
        "shape": [
          1
        ],
        "low": "array([-1.], dtype=float32)",
        "high": "array([1.], dtype=float32)",
        "bounded_below": "array([ True])",
        "bounded_above": "array([ True])",
        "_np_random": "None",
        "$type": "akro.box.Box"
      },
      "output_space": {
        "dtype": "dtype('float32')",
        "shape": [
          11
        ],
        "low": "array([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf],\n      dtype=float32)",
        "high": "array([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf],\n      dtype=float32)",
        "bounded_below": "array([False, False, False, False, False, False, False, False, False,\n       False, False])",
        "bounded_above": "array([False, False, False, False, False, False, False, False, False,\n       False, False])",
        "_np_random": "None",
        "$type": "akro.box.Box"
      },
      "$type": "garage._environment.EnvSpec"
    },
    "episode_infos_by_episode": {},
    "observations": "array([[ 1.74223821e-02,  7.18388049e-02,  1.03756295e-02, ...,\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],\n       [ 1.82620119e-03,  1.08695584e-01, -3.23457372e-02, ...,\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],\n       [-5.59906709e-03,  1.35532947e-01, -6.54962721e-02, ...,\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],\n       ...,\n       [-9.90534869e-01, -2.49367270e-02, -3.95159381e-01, ...,\n         1.00000000e+01,  0.00000000e+00,  0.00000000e+00],\n       [-9.90366380e-01, -1.85971334e-02, -5.31677957e-01, ...,\n         1.00000000e+01,  0.00000000e+00,  0.00000000e+00],\n       [-9.63788204e-01, -5.91835620e-02, -6.40261102e-01, ...,\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00]])",
    "actions": "array([[-0.2939924 ],\n       [ 0.46435997],\n       [-0.03361441],\n       ...,\n       [-0.18356265],\n       [ 0.45382494],\n       [ 0.81339365]], dtype=float32)",
    "rewards": "array([9.3320297 , 9.34734161, 9.34977258, ..., 9.11388985, 9.03199197,\n       8.77020799])",
    "env_infos": {
      "orig_reward": "array([9.3320297 , 9.34734161, 9.34977258, ..., 9.11388985, 9.03199197,\n       8.77020799])",
      "lambda": "array([1., 1., 1., ..., 1., 1., 1.])",
      "gamma": "array([1., 1., 1., ..., 1., 1., 1.])",
      "scale": "array([1., 1., 1., ..., 1., 1., 1.])",
      "TimeLimit.truncated": "array([False, False, False, ..., False, False, False])",
      "GymEnv.TimeLimitTerminated": "array([False, False, False, ..., False, False, False])"
    },
    "agent_infos": {
      "mean": "array([[-0.1662744 ],\n       [ 0.47449476],\n       [ 0.07673968],\n       ...,\n       [-0.21102375],\n       [ 0.10859636],\n       [ 0.68264925]], dtype=float32)",
      "log_std": "array([[-2.0401518 ],\n       [-1.7547659 ],\n       [-1.9698077 ],\n       ...,\n       [-1.0579562 ],\n       [-1.0371448 ],\n       [-0.38790438]], dtype=float32)"
    },
    "step_types": "array([<StepType.FIRST: 0>, <StepType.MID: 1>, <StepType.MID: 1>, ...,\n       <StepType.MID: 1>, <StepType.MID: 1>, <StepType.TERMINAL: 2>],\n      dtype=object)",
    "$type": "garage._dtypes.EpisodeBatch"
  },
  "batch_size": 10000,
  "ignore_shutdown": true,
  "seed": 1,
  "ls_n_epochs": null,
  "ls_cls": "TanhLS",
  "value_lr": 0.005,
  "policy_lr": 0.0001,
  "n_workers": 4,
  "use_gpu": false,
  "sampler_mode": "ray"
}